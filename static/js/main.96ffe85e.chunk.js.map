{"version":3,"sources":["serviceWorker.ts","routes.tsx","layouts/MainLayout.tsx","index.tsx","components/ErrorBoundary.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","exact","path","component","lazy","title","MainLayout","children","theme","useTheme","history","useHistory","React","useState","pathname","routes","selectedTab","setSelectedTab","className","AppBar","position","style","marginBottom","spacing","avatar","Tabs","value","onChange","_","newValue","push","centered","background","palette","primary","dark","map","route","Tab","key","label","Container","maxWidth","HeaderLogo","classes","useHeaderLogoStyles","root","layoutTitle","Avatar","Typography","variant","makeStyles","display","alignItems","justifyContent","padding","margin","width","height","fontSize","fontWeight","paper","color","main","fontFamily","textAlign","createMuiTheme","overrides","MuiCssBaseline","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","FallbackComponent","componentStack","resetErrorBoundary","role","message","onClick","Suspense","fallback","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.96ffe85e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { lazy } from 'react'\n\nexport default [\n  { exact: true, path: '/', component: lazy(() => import('pages/Home')), title: 'Home' },\n  { exact: true, path: '/portfolio', component: lazy(() => import('pages/Portfolio')), title: 'Portfolio' },\n  { exact: true, path: '/about', component: lazy(() => import('pages/About')), title: 'About' },\n  { exact: true, path: '/contact', component: lazy(() => import('pages/Contact')), title: 'Contact' },\n]","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Avatar from '@material-ui/core/Avatar'\nimport { Tabs, Tab, useTheme, makeStyles, Typography, Container } from '@material-ui/core'\nimport routes from 'routes'\nimport { useHistory } from 'react-router-dom'\n\nconst MainLayout: React.FC = ({ children }) => {\n  const theme = useTheme()\n\n  const history = useHistory()\n  const [selectedTab, setSelectedTab] = React.useState(history.location.pathname ? history.location.pathname : routes[0].path)\n  const handleChangeRoute = (_: any, newValue: string) => {\n    setSelectedTab(newValue)\n    history.push(newValue)\n  }\n\n  return (\n    <div className='MainLayout'>\n      <AppBar position='static' style={{ marginBottom: theme.spacing(3) }}>\n        <HeaderLogo\n          avatar='E'\n          title='Eric Do Portfolio'\n        />\n        <Tabs value={selectedTab} onChange={handleChangeRoute}\n          centered\n          style={{ background: theme.palette.primary.dark }}\n        >\n          {routes.map(route => (\n            <Tab key={route.path} label={route.title} value={route.path} />\n          ))}\n        </Tabs>\n      </AppBar>\n      <Container maxWidth='md'>\n        {children}\n      </Container>\n    </div>\n  )\n}\nexport default MainLayout\n\nexport type HeaderLogoProps = {\n  avatar: any\n  title: string\n}\nconst HeaderLogo: React.FC<HeaderLogoProps> = ({ avatar, title }) => {\n  const classes = useHeaderLogoStyles()\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.layoutTitle}>\n        <Avatar className={classes.avatar}>\n          {avatar}\n        </Avatar>\n        <Typography variant='subtitle1' className={classes.title}>\n          {title}\n        </Typography>\n      </div>\n    </div>\n  )\n}\nconst useHeaderLogoStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: theme.spacing(2),\n  },\n  layoutTitle: {\n    display: 'block',\n  },\n  avatar: {\n    margin: '1rem auto',\n    width: 120,\n    height: 120,\n    fontSize: '4.5rem',\n    fontWeight: 600,\n    background: theme.palette.background.paper,\n    color: theme.palette.primary.main,\n    fontFamily: 'cursive',\n  },\n  title: {\n    textAlign: 'center'\n  },\n}))","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from 'serviceWorker'\n\nimport { ErrorBoundary } from 'react-error-boundary'\nimport { ErrorFallback } from 'components/ErrorBoundary'\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport routes from 'routes'\n\nimport { ThemeProvider, createMuiTheme, CssBaseline } from '@material-ui/core'\nimport MainLayout from 'layouts/MainLayout'\nconst theme = createMuiTheme({\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        '*': {\n          'scrollbar-width': 'thin',\n        },\n        '*::-webkit-scrollbar': {\n          width: '4px',\n          height: '4px',\n        }\n      }\n    }\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <ErrorBoundary FallbackComponent={ErrorFallback}>\n        <Router>\n          <Switch>\n            <MainLayout>\n              <React.Suspense fallback={null}>\n                {routes.map(route => <Route key={route.path} {...route} />)}\n              </React.Suspense>\n            </MainLayout>\n          </Switch>\n        </Router>\n      </ErrorBoundary>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.register()\n","import React from 'react'\n\nexport const ErrorFallback = ({ error, componentStack, resetErrorBoundary }: any) => {\n  return (\n    <div role=\"alert\">\n      <p>Something went wrong:</p>\n      <pre>{error.message}</pre>\n      <pre>{componentStack}</pre>\n      <button onClick={resetErrorBoundary}>Try again</button>\n    </div>\n  )\n}"],"sourceRoot":""}